{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.jsx","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilms","fetch","then","promise","json","FindMovie","addMovie","useState","changeMovie","changeTitle","error","changeError","findFilm","a","undefined","film","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","data","changeMovies","some","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uBCT3BG,G,MAAW,SAAAd,GAAK,OAAIe,MAAM,GAAD,OAF1B,0DAE0B,OAAUf,IAC7CgB,MAAK,SAAAC,GAAO,OAAIA,EAAQC,Y,OCKdC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAASZ,EAAO,IADJ,mBAClCE,EADkC,KAC3BW,EAD2B,OAEZD,mBAAS,IAFG,mBAElCrB,EAFkC,KAE3BuB,EAF2B,OAGZF,oBAAS,GAHG,mBAGlCG,EAHkC,KAG3BC,EAH2B,KAKnCC,EAAQ,uCAAG,4BAAAC,EAAA,yDACD,KAAV3B,EADW,iEAKIc,EAASd,GALb,eAOI4B,KAFbC,EALS,QAONC,MAPM,uBAQbL,GAAY,GARC,0BAafH,EAAY,CACVtB,MAAO6B,EAAKC,MACZ7B,YAAa4B,EAAKE,KAClB7B,OAAQ2B,EAAKG,OACb7B,QAAQ,8BAAD,OAAgC0B,EAAKI,OAArC,KACPpB,OAAQgB,EAAKI,SAlBA,2CAAH,qDA2Bd,OACE,oCACE,0BACE7B,UAAU,aACV8B,SAAU,SAACC,GACTA,EAAMC,iBACNb,EAAY,MAGd,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,QAAQiC,QAAQ,eAAjC,eAIA,yBAAKjC,UAAU,WACb,2BACEkC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpC,UAAS,gBAAWoB,GAAS,aAC7BiB,MAAOzC,EACP0C,SA1BS,SAACP,GACpBZ,EAAYY,EAAMQ,OAAOF,OACzBhB,GAAY,OA4BLD,GACC,uBAAGpB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkC,KAAK,SACLlC,UAAU,kBACVwC,QAASlB,GAHX,iBASF,yBAAKtB,UAAU,WACb,4BACEkC,KAAK,SACLlC,UAAU,oBACVwC,QAAS,kBAAMxB,EAAST,KAH1B,sBAWN,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,MC3FVkC,EAAM,WAAO,IAAD,EACQxB,mBAASyB,GADjB,mBAChBrC,EADgB,KACRsC,EADQ,KAWvB,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWgB,SAdA,SAACT,GACZF,EAAOuC,MAAK,SAAAnB,GAAI,OAAIA,EAAK7B,QAAUW,EAAMX,UAI7C+C,EAAa,GAAD,mBAAKtC,GAAL,CAAaE,WCT7BsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e1909935.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const url = 'http://www.omdbapi.com/?i=tt3896198&apikey=19d6621e&t=';\n\nexport const getFilms = title => fetch(`${url}${title}`)\n  .then(promise => promise.json());\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { getFilms } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, changeMovie] = useState(movies[0]);\n  const [title, changeTitle] = useState('');\n  const [error, changeError] = useState(false);\n\n  const findFilm = async() => {\n    if (title === '') {\n      return;\n    }\n\n    const film = await getFilms(title);\n\n    if (film.Title === undefined) {\n      changeError(true);\n\n      return;\n    }\n\n    changeMovie({\n      title: film.Title,\n      description: film.Plot,\n      imgUrl: film.Poster,\n      imdbUrl: `https://www.imdb.com/title/${film.imdbID}/`,\n      imdbId: film.imdbID,\n    });\n  };\n\n  const handleChange = (event) => {\n    changeTitle(event.target.value);\n    changeError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          changeTitle('');\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${error && 'is-danger'}`}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={findFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...movie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, changeMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    if (movies.some(film => film.title === movie.title)) {\n      return;\n    }\n\n    changeMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}